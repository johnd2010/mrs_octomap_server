<launch>

  <arg name="pointcloud_min_x" default="-50" />
  <arg name="pointcloud_min_y" default="-50" />
  <arg name="pointcloud_max_x" default="50" />
  <arg name="pointcloud_max_y" default="50" />

  <arg name="UAV_NAME" default="$(optenv UAV_NAME uav1)" />
  <arg name="RUN_TYPE" default="$(optenv RUN_TYPE)" />

  <arg name="debug" default="false" />
  <arg name="standalone" default="false" />
  <arg name="custom_config" default="" />

  <arg name="lidar_3d_topic_0_in" default="~REMAP_ME" />
  <arg name="lidar_3d_topic_1_in" default="~REMAP_ME" />
  <arg name="lidar_3d_topic_2_in" default="~REMAP_ME" />

  <arg name="lidar_3d_topic_0_over_max_range_in" default="~REMAP_ME" />
  <arg name="lidar_3d_topic_1_over_max_range_in" default="~REMAP_ME" />
  <arg name="lidar_3d_topic_2_over_max_range_in" default="~REMAP_ME" />

  <arg name="lidar_2d_topic_0_in" default="~REMAP_ME" />
  <arg name="lidar_2d_topic_1_in" default="~REMAP_ME" />
  <arg name="lidar_2d_topic_2_in" default="~REMAP_ME" />

  <arg name="depth_camera_topic_0_in" default="~REMAP_ME" />
  <arg name="depth_camera_topic_1_in" default="~REMAP_ME" />
  <arg name="depth_camera_topic_2_in" default="~REMAP_ME" />

  <arg name="depth_camera_topic_0_over_max_range_in" default="~REMAP_ME" />
  <arg name="depth_camera_topic_1_over_max_range_in" default="~REMAP_ME" />
  <arg name="depth_camera_topic_2_over_max_range_in" default="~REMAP_ME" />

  <arg name="camera_info_topic_0_in" default="~REMAP_ME" />
  <arg name="camera_info_topic_1_in" default="~REMAP_ME" />
  <arg name="camera_info_topic_2_in" default="~REMAP_ME" />

  <arg name="map_path" default="$(env HOME)/maps" />

  <arg name="world_frame_id" default="$(arg UAV_NAME)/gps_origin" />
  <arg name="robot_frame_id" default="$(arg UAV_NAME)/fcu" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <arg name="nodelet_manager_name" default="" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg nodelet_manager_name)" />

  <arg if="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" default="true" />
  <arg unless="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" default="false" />

  <!-- <env name="LD_PRELOAD" value="/usr/lib/x86_64-linux-gnu/libasan.so.5"/> -->

  <group ns="$(arg UAV_NAME)">

    <node pkg="nodelet" type="nodelet" name="octomap_server" args="$(arg nodelet) mrs_octomap_server/MrsOctomapServer $(arg nodelet_manager)" output="screen" launch-prefix="$(arg launch_prefix)">

      <rosparam file="$(find mrs_octomap_server)/config/default.yaml" />
      <rosparam if="$(eval not arg('custom_config') == '')" file="$(arg custom_config)" />

      <param name="uav_name" type="string" value="$(arg UAV_NAME)" />
      <param name="simulation" type="bool" value="$(arg simulation)" />

      <param name="pointcloud_min_x" value="$(arg pointcloud_min_x)" />
      <param name="pointcloud_min_y" value="$(arg pointcloud_min_y)" />
      <param name="pointcloud_max_x" value="$(arg pointcloud_max_x)" />
      <param name="pointcloud_max_y" value="$(arg pointcloud_max_y)" />


      <param name="world_frame_id" type="string" value="$(arg world_frame_id)" />
      <param name="robot_frame_id" type="string" value="$(arg robot_frame_id)" />

      <param name="map_path" type="string" value="$(arg map_path)" />

      <!-- topics in -->

      <!-- 3D lidar -->
      <remap from="~lidar_3d_0_in" to="$(arg lidar_3d_topic_0_in)" />
      <remap from="~lidar_3d_1_in" to="$(arg lidar_3d_topic_1_in)" />
      <remap from="~lidar_3d_2_in" to="$(arg lidar_3d_topic_2_in)" />

      <remap from="~lidar_3d_0_over_max_range_in" to="$(arg lidar_3d_topic_0_over_max_range_in)" />
      <remap from="~lidar_3d_1_over_max_range_in" to="$(arg lidar_3d_topic_1_over_max_range_in)" />
      <remap from="~lidar_3d_2_over_max_range_in" to="$(arg lidar_3d_topic_2_over_max_range_in)" />
      <!-- 2D lidar -->
      <remap from="~lidar_2d_0_in" to="$(arg lidar_2d_topic_0_in)" />
      <remap from="~lidar_2d_1_in" to="$(arg lidar_2d_topic_1_in)" />
      <remap from="~lidar_2d_2_in" to="$(arg lidar_2d_topic_2_in)" />
      <!-- depth cam -->
      <remap from="~depth_camera_0_in" to="$(arg depth_camera_topic_0_in)" />
      <remap from="~depth_camera_1_in" to="$(arg depth_camera_topic_1_in)" />
      <remap from="~depth_camera_2_in" to="$(arg depth_camera_topic_2_in)" />

      <remap from="~depth_camera_0_over_max_range_in" to="$(arg depth_camera_topic_0_over_max_range_in)" />
      <remap from="~depth_camera_1_over_max_range_in" to="$(arg depth_camera_topic_1_over_max_range_in)" />
      <remap from="~depth_camera_2_over_max_range_in" to="$(arg depth_camera_topic_2_over_max_range_in)" />

      <remap from="~camera_info_0_in" to="$(arg camera_info_topic_0_in)" />
      <remap from="~camera_info_1_in" to="$(arg camera_info_topic_1_in)" />
      <remap from="~camera_info_2_in" to="$(arg camera_info_topic_2_in)" />

      <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
      <remap from="~height_in" to="odometry/height" />
      <remap from="~clear_box_in" to="uav_pose_estimator/clear_box" />

      <!-- topics out -->

      <remap from="~octomap_global_full_out" to="~octomap_global_full" />
      <remap from="~octomap_global_binary_out" to="~octomap_global_binary" />

      <remap from="~octomap_local_full_out" to="~octomap_local_full" />
      <remap from="~octomap_local_binary_out" to="~octomap_local_binary" />

        <!-- services -->
      <remap from="~reset_map_in" to="~reset_map" />
      <remap from="~save_map_in" to="~save_map" />
      <remap from="~load_map_in" to="~load_map" />
      <remap from="~set_global_fractor_in" to="~set_global_fractor" />
      <remap from="~set_local_fractor_in" to="~set_local_fractor" />

    </node>

  </group>
</launch>
